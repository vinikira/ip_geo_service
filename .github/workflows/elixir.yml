name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    name: Build and test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_HOST_AUTH_METHOD: 'trust'
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
    - uses: actions/checkout@v3

    - name: Set up Elixir
      uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
      id: beam
      with:
        elixir-version: '1.15.4' # [Required] Define the Elixir version
        otp-version: '26.0'      # [Required] Define the Erlang/OTP version

    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Check unused dependencies
      run: mix deps.unlock --check-unused
      if: github.event_name == 'pull_request'

    - name: Check Formatting
      run: mix format --check-formatted
      if: github.event_name == 'pull_request'

    - name: Run credo
      run: mix credo --strict --format=oneline
      if: github.event_name == 'pull_request'

    - name: Restore dialyzer PLT cache
      uses: actions/cache@v2
      id: plt_cache
      if: github.event_name == 'pull_request'
      with:
        key: |
          ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
        restore-keys: |
          ${{ runner.os }}-${{ steps.beam.outputs.elixir-version }}-${{ steps.beam.outputs.otp-version }}-plt
        path: |
          priv/plts

    - name: Create dialyzer PLTs
      if: steps.plt_cache.outputs.cache-hit != 'true' && github.event_name == 'pull_request'
      run: mix dialyzer --plt

    - name: Run dialyzer
      run: mix dialyzer --format github
      if: github.event_name == 'pull_request'

    - name: Run test setup
      env:
        MIX_ENV: test
      run: mix ecto.setup

    - name: Run tests
      env:
        MIX_ENV: test
      run: mix test
